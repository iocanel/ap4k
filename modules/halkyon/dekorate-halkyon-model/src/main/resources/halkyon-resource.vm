package ${model.packageName};

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.fabric8.kubernetes.api.model.Doneable;
import io.fabric8.kubernetes.api.model.HasMetadata;
import io.fabric8.kubernetes.api.model.ObjectMeta;

import io.sundr.builder.annotations.Buildable;
import io.sundr.builder.annotations.BuildableReference;
import io.sundr.builder.annotations.Inline;


#set ($spec = $model.name)
#set ($length = $spec.length())
#set ($tindex = $length - 4)
#set ($resource = $spec.substring(0, $tindex))
#set ($status = $resource + "Status")

#set ($version = "unknown")
#set ($annotations = $model.annotations)
#set ($kind = "$resource")
#set ($plural = "$kind" + "s")
#foreach ($annotation in $annotations)
  #if ($annotation.getClassRef().getName().equals("CustomResource"))
    #set ($version =  $annotation.getParameters().get("group") + "/" + $annotation.getParameters().get("version"))
    #set( $kindFromAnn = $annotation.getParameters().get("kind"))
    #set( $pluralFromAnn = $annotation.getParameters().get("plural"))
    #if( !$kindFromAnn.isEmpty())
      #set ($kind = $kindFromAnn)
    #end
    #if( !$pluralFromAnn.isEmpty())
      #set ($plural = $pluralFromAnn)
    #end
  #end
#end

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"apiVersion",
"kind",
"metadata",
"spec",
"status"
})
@JsonDeserialize(using = com.fasterxml.jackson.databind.JsonDeserializer.None.class)
@Buildable(editableEnabled = false, validationEnabled = false, generateBuilderPackage = false, builderPackage = "io.fabric8.kubernetes.api.builder", inline = @Inline(type = Doneable.class, prefix = "Doneable", value = "done"), refs = @BuildableReference(ObjectMeta.class))
public class $resource implements HasMetadata {

/**
* (Required)
*/
@JsonProperty("apiVersion")
private String apiVersion = "$version";
/**
* (Required)
*/
@JsonProperty("kind")
private String kind = "$kind";

/**
*
*/
@JsonProperty("metadata")
private ObjectMeta metadata;
/**
*
*/
@JsonProperty("spec")
private $spec spec;

@JsonProperty("status")
private $status status;

/**
* No args constructor for use in serialization
*/
public $resource() {
}

/**
* @param metadata
* @param apiVersion
* @param kind
* @param spec
*/
public $resource(String apiVersion, String kind, ObjectMeta metadata, $spec spec, $status status) {
this.apiVersion = apiVersion;
this.kind = kind;
this.metadata = metadata;
this.spec = spec;
this.status = status;
}

/**
* (Required)
*
* @return The apiVersion
*/
@JsonProperty("apiVersion")
public String getApiVersion() {
return apiVersion;
}

/**
* (Required)
*
* @param apiVersion The apiVersion
*/
@JsonProperty("apiVersion")
public void setApiVersion(String apiVersion) {
this.apiVersion = apiVersion;
}

/**
* (Required)
*
* @return The kind
*/
@JsonProperty("kind")
public String getKind() {
return kind;
}

/**
* (Required)
*
* @param kind The kind
*/
@JsonProperty("kind")
public void setKind(String kind) {
this.kind = kind;
}

/**
* @return The metadata
*/
@JsonProperty("metadata")
public ObjectMeta getMetadata() {
return metadata;
}

/**
* @param metadata The metadata
*/
@JsonProperty("metadata")
public void setMetadata(ObjectMeta metadata) {
this.metadata = metadata;
}

/**
* @return The spec
*/
@JsonProperty("spec")
public $spec getSpec() {
return spec;
}

/**
* @param spec The spec
*/
@JsonProperty("spec")
public void setSpec($spec spec) {
this.spec = spec;
}

@JsonProperty("status")
public $status getStatus() {
return status;
}

public void setStatus($status status) {
this.status = status;
}

}
