package ${model.packageName};

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.fabric8.kubernetes.api.model.Doneable;

import io.sundr.builder.annotations.Buildable;
import io.sundr.builder.annotations.Inline;

#set ($spec = $model.name)
#set ($length = $spec.length())
#set ($tindex = $length - 4)
#set ($resource = $spec.substring(0, $tindex))


@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
"phase",
})
@JsonDeserialize(using = com.fasterxml.jackson.databind.JsonDeserializer.None.class)
@Buildable(editableEnabled = false, builderPackage = "io.fabric8.kubernetes.api.builder", inline = @Inline(type = Doneable.class, prefix = "Doneable", value = "done"))
public class ${resource}Status {

@JsonProperty("status")
private String phase;

public ${resource}Status() {
}

public ${resource}Status(String phase) {
this.phase = phase;
}

public String getPhase() {
return phase;
}

public void setPhase(String phase) {
this.phase = phase;
}
}
